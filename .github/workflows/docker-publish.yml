name: Docker publish

on:
  schedule:
    - cron: '0 0 * * 0'
  push:
    branches:
      - 'master'
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Get the latest non-prerelease
        uses: rez0n/actions-github-release@main
        id: latest-release
        env:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          type: stable
      - name: Choose Docker tag
        id: chosen-tag
        run: |
          if [ ${{ github.event_name }}  == 'schedule' ]; then
            echo "tag=${{ steps.latest-release.outputs.release }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${{github.ref_name}}" >> $GITHUB_OUTPUT
          fi
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch,enable=${{github.event_name  != 'schedule'}}
            type=semver,enable=${{ steps.chosen-tag.outputs.tag != 'master' }},pattern=v{{version}},value=${{ steps.chosen-tag.outputs.tag }}
            type=semver,enable=${{ steps.chosen-tag.outputs.tag != 'master' }},pattern=v{{major}},value=${{ steps.chosen-tag.outputs.tag }}
            type=semver,enable=${{ steps.chosen-tag.outputs.tag != 'master' }},pattern=v{{major}}.{{minor}},value=${{ steps.chosen-tag.outputs.tag }}
      - name: Build and export to Docker
        id: build-and-export
        uses: docker/build-push-action@44ea916f6c540f9302d50c2b1e5a8dc071f15cdf
        with:
          context: .
          load: true
          tags: ${{ github.event.repository.name }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Test
        run: docker run --env CI=true --name ${{ github.event.repository.name }} ${{ github.event.repository.name }} runner test
      - name: Build and push
        uses: docker/build-push-action@44ea916f6c540f9302d50c2b1e5a8dc071f15cdf
        with:
          context: .
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
